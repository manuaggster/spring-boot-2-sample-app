apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app: {{ .Chart.Name }}
    version: {{ .Chart.Version }}    
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: {{ .Chart.Name }}
      version: {{ .Chart.Version }}      
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: {{ .Chart.Name }}
        version: {{ .Chart.Version }}
    spec:
{{- if .Values.pullSecrets.enabled }}
      initContainers:
        - name: secrets-client
          image: "{{ .Values.pullSecrets.repository }}:{{ .Values.pullSecrets.tag }}"
          imagePullPolicy: Always
          env:
            - name: SECRETSTOREAD
              value: "{{ .Values.pullSecrets.baseSecretsArn }}{{ .Values.pullSecrets.secretsToRead }}"
            - name: PREFIX
              value: "{{ .Values.pullSecrets.prefix }}"
            - name: VOLUME
              value: "/data"
          volumeMounts:
            - mountPath: "/data"
              name: data
{{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{ include "image.details" . }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          env:
            - name: SECRETSVOL
              value: "/data"
            - name: APP_VERSION
              value: "{{ .Chart.AppVersion }}"
            - name: BUILD_NUMBER
              value: "{{ .Values.BUILD_NUMBER }}"
            - name: BUILD_HASH
              value: "{{ .Values.BUILD_HASH }}"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          {{- with .Values.environmentVariables  }}
          {{- toYaml . | trim | nindent 12 }}
          {{- end }}              
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
{{- toYaml .Values.resourceLimits | trim | nindent 10 }}
{{- if .Values.pullSecrets.enabled }}
          volumeMounts:
            - mountPath: "/data"
              name: data
      volumes:
        - name: data
          emptyDir: {}
{{- end }}
{{- if (.Values.pullSecretsFromLocalFileSystem) }}
          volumeMounts:
            - mountPath: "/data"
              name: secrets-volume-for-local-development
      volumes:
      - name: secrets-volume-for-local-development
        hostPath:
          path: "{{ .Values.pullSecretsFromLocalFileSystem.path }}"
{{- end }}
